package com.example.myapplication.data.remote.dto.stock

data class ResultDto(
    val ask: Double,
    val askSize: Int,
    val averageDailyVolume10Day: Long,
    val averageDailyVolume3Month: Long,
    val bid: Double,
    val bidSize: Int,
    val contractSymbol: Boolean,
    val cryptoTradeable: Boolean,
    val currency: String,
    val customPriceAlertConfidence: String,
    val esgPopulated: Boolean,
    val exchange: String,
    val exchangeDataDelayedBy: Int,
    val exchangeTimezoneName: String,
    val exchangeTimezoneShortName: String,
    val expireDate: Int,
    val expireIsoDate: String,
    val fiftyDayAverage: Double,
    val fiftyDayAverageChange: Double,
    val fiftyDayAverageChangePercent: Double,
    val fiftyTwoWeekHigh: Double,
    val fiftyTwoWeekHighChange: Double,
    val fiftyTwoWeekHighChangePercent: Double,
    val fiftyTwoWeekLow: Double,
    val fiftyTwoWeekLowChange: Double,
    val fiftyTwoWeekLowChangePercent: Double,
    val fiftyTwoWeekRange: String,
    val firstTradeDateMilliseconds: Long,
    val fullExchangeName: String,
    val gmtOffSetMilliseconds: Long,
    val hasPrePostMarketData: Boolean,
    val headSymbolAsString: String,
    val language: String,
    val market: String,
    val marketState: String,
    val openInterest: Int,
    val priceHint: Int,
    val quoteSourceName: String,
    val quoteSummary: QuoteSummary,
    val quoteType: String,
    val region: String,
    val regularMarketChange: Double,
    val regularMarketChangePercent: Double,
    val regularMarketDayHigh: Double,
    val regularMarketDayLow: Double,
    val regularMarketDayRange: String,
    val regularMarketOpen: Double,
    val regularMarketPreviousClose: Double,
    val regularMarketPrice: Double,
    val regularMarketTime: Long,
    val regularMarketVolume: Long,
    val shortName: String,
    val sourceInterval: Int,
    val symbol: String,
    val tradeable: Boolean,
    val triggerable: Boolean,
    val twoHundredDayAverage: Double,
    val twoHundredDayAverageChange: Double,
    val twoHundredDayAverageChangePercent: Double,
    val typeDisp: String,
    val underlyingExchangeSymbol: String,
    val underlyingSymbol: String
)